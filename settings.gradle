rootProject.name = 'shop'
include 'shop-app'
include 'security-api'
include 'security-app'
include 'shop-api'
include 'library-api'
include 'library-app'
include 'common'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('groovy', '3.0.5')
            version('checkstyle', '8.37')
            library('groovy-core', 'org.codehaus.groovy', 'groovy').versionRef('groovy')
            library('groovy-json', 'org.codehaus.groovy', 'groovy-json').versionRef('groovy')
            library('groovy-nio', 'org.codehaus.groovy', 'groovy-nio').versionRef('groovy')
            library('commons-lang3', 'org.apache.commons', 'commons-lang3').version {
                strictly '[3.8, 4.0['
                prefer '3.9'
            }
            bundle('groovy', ['groovy-core', 'groovy-json', 'groovy-nio'])
            //the above just for an example
            version('spring-boot-starter','3.0.5')
            version('junit-jupiter','5.7.0')
            library('lombok', 'org.projectlombok:lombok:1.18.26')
            library('web', 'org.springframework.boot','spring-boot-starter-web').versionRef('spring-boot-starter')
            library('jpa', 'org.springframework.boot','spring-boot-starter-data-jpa').versionRef('spring-boot-starter')
            library('validation', 'org.springframework.boot','spring-boot-starter-validation').versionRef('spring-boot-starter')
            library('prometheus', 'io.micrometer:micrometer-registry-prometheus:1.11.0')
            library('postgresql', 'org.postgresql:postgresql:42.6.0')
            library('junit-api', 'org.junit.jupiter','junit-jupiter-api').versionRef('junit-jupiter')
            library('junit-engine', 'org.junit.jupiter','junit-jupiter-engine').versionRef('junit-jupiter')
            library('flyway', 'org.flywaydb:flyway-core:9.19.1')
            library('logstash', 'net.logstash.logback:logstash-logback-encoder:7.2')
            plugin('java','java').version('17')
            plugin('java-library','java-library').version('17')
            plugin('dependency-management','io.spring.dependency-management').version('1.1.0')
        }
    }
}

